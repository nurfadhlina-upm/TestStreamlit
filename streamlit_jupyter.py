@@ -0,0 +1,268 @@
# -*- coding: utf-8 -*-
"""Streamlit Jupyter.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QJCHiG-PDJgj-gJ_PXuHx3EHmmZxU37-
"""

!pip install streamlit

import streamlit as st
import pandas as pd
import numpy as np
import streamlit.components.v1 as components

# Commented out IPython magic to ensure Python compatibility.
# %%writefile Student_Grade_Prediction_App.py
# 
# ###########################################################################################
# # This code is implemented by Dr.Anahita Ghazvini and Prof.Dr.Nurfadhlina Mohd sharef
# #Email: anahitaghazvini@upm.edu.my;nurfadhlina@upm.edu.my
# ###########################################################################################
# 
# # Importing necessary libraries
# import streamlit as st
# from eLSTM_Grade_Prediction import predict
# import numpy as np
# import PIL
# from PIL import Image
# import base64
# import pandas as pd
# import sys
# import tensorflow as tf
# from sklearn.preprocessing import StandardScaler
# 
# # Define the main function for the Streamlit app and set up HTML template
# def main():
#     html_temp = """
#     <div style ="background-color:white;padding:13px">
#     <h1 style ="color:black;text-align:center;">Student Grade Prediction</h1>
#     </div>
#     """
# im = Image.open('Logo.png')
# st.set_page_config(page_title="Student Grade Prediction", page_icon = im)
# image = Image.open('Logo.png')
# st.image(image)
# st.markdown("<h1 style='text-align: center; color: black;'>Student Grade Prediction</h1>", unsafe_allow_html=True)
# 
# #Define options and format functions for user input selections
# option = {"Female": "Female", "Male": "Male"}
# def format_func(GENDER):
#     return option[GENDER]
# GENDER = st.radio("Gender Selection", options=list(option.keys()), format_func=format_func)
# 
# # Define options and format functions for age selection
# option1 = {20: "20",21: "21",22: "22",23: "23",24: "24",25: "25",26: "26",27: "28",29: "29",30: "30",31: "31",32: "32",33: "33",34: "34",35: "35",36: "36",37: "37",38: "38",39: "39",40: "40"}
# def format_func(AGE):
#     return option1[AGE]
# AGE = st.selectbox("Age Selection:", options=list(option1.keys()), format_func=format_func)
# 
# #Define options and format functions for country selection
# option2 = {1: "Local", 2: "Foreign"}
# def format_func(COUNTRY):
#     return option2[COUNTRY]
# COUNTRY = st.selectbox("Country:", options=list(option2.keys()), format_func=format_func)
# 
# # Define options and format functions for sponsorship selection
# option3 = {"Biasiswa": "Biasiswa", "Pinjaman": "Pinjaman","Tiada Penaja":"Tiada Penaja"}
# def format_func(TYPE_SPONSOR):
#     return option3[TYPE_SPONSOR]
# TYPE_SPONSOR = st.selectbox("Sponsership:", options=list(option3.keys()), format_func=format_func)
# 
# #sDefine options and format functions for course selection
# option4 = {"AGEN KOMPUTERAN":"AGEN KOMPUTERAN","ANALISIS DAN REKA BENTUK PERMAINAN KOMPUTER":"ANALISIS DAN REKA BENTUK PERMAINAN KOMPUTER","ANALISIS DAN REKA BENTUK RANGKAIAN":"ANALISIS DAN REKA BENTUK RANGKAIAN","ANALITIK BISNES":"ANALITIK BISNES", "ANTARA RANGKAIAN" :"ANTARA RANGKAIAN","APLIKASI BERGERAK":"APLIKASI BERGERAK","FORENSIK KOMPUTER":"FORENSIK KOMPUTER","KENYATAAN MAYA":"KENYATAAN MAYA", "KESELAMATAN PANGKALAN DATA":"KESELAMATAN PANGKALAN DATA","KESELAMATAN SISTEM KOMPUTER":"KESELAMATAN SISTEM KOMPUTER","KOMPUTERAN CERDAS":"KOMPUTERAN CERDAS", "KRIPTOGRAFI":"KRIPTOGRAFI","KUALITI PERISIAN":"KUALITI PERISIAN","ORGANISASI KOMPUTER DAN BAHASA HIMPUNAN":"ORGANISASI KOMPUTER DAN BAHASA HIMPUNAN","PEMBANGUNAN 7":"PEMBANGUNAN 7","PEMBANGUNAN APLIKASI PANGKALAN DATA":"PEMBANGUNAN APLIKASI PANGKALAN DATA","PEMBANGUNAN APLIKASI WEB":"PEMBANGUNAN APLIKASI WEB",
#                           "PEMBANGUNAN PERISIAN SELAMAT":"PEMBANGUNAN PERISIAN SELAMAT","PEMBANGUNAN PERMAINAN KOMPUTER":"PEMBANGUNAN PERMAINAN KOMPUTER","PENDIGITAN AUDIO TAMPAK":"PENDIGITAN AUDIO TAMPAK","PENGATURCARAAN C++":"PENGATURCARAAN C++","PENGATURCARAAN KOMPUTER I":"PENGATURCARAAN KOMPUTER I","PENGATURCARAAN KOMPUTER II":"PENGATURCARAAN KOMPUTER II",
#                           "PENGATURCARAAN PYTHON":"PENGATURCARAAN PYTHON","PENGATURCARAAN SELARI DAN TERAGIH":"PENGATURCARAAN SELARI DAN TERAGIH","PENGATURCARAAN SHELL":"PENGATURCARAAN SHELL","PENGATURCARAAN SISTEM TERBENAM":"PENGATURCARAAN SISTEM TERBENAM","PENGKOMPUTAN SELARI DAN TERAGIH":"PENGKOMPUTAN SELARI DAN TERAGIH","PENGUJIAN PERISIAN":"PENGUJIAN PERISIAN",
#                           "PENGURUSAN RANGKAIAN":"PENGURUSAN RANGKAIAN","PENYELENGGARAAN DAN EVOLUSI PERISIAN":"PENYELENGGARAAN DAN EVOLUSI PERISIAN","PERDAGANGAN ELEKTRONIK":"PERDAGANGAN ELEKTRONIK","PROJEK KEJURUTERAAN PERISIAN BERPASUKAN":"PROJEK KEJURUTERAAN PERISIAN BERPASUKAN","SISTEM BERASASKAN PENGETAHUAN":"SISTEM BERASASKAN PENGETAHUAN","SISTEM PENGOPERASIAN":"SISTEM PENGOPERASIAN",
#                           "STATISTIK BAGI SAINS KOMPUTER":"STATISTIK BAGI SAINS KOMPUTER","STRUKTUR DATA DAN ALGORITMA":"STRUKTUR DATA DAN ALGORITMA","STRUKTUR DISKRET":"STRUKTUR DISKRET","PEMBANGUNAN APLIKASI BERGERAK":"PEMBANGUNAN APLIKASI BERGERAK"}
# 
# def format_func(COURSE):
#     return option4[COURSE]
# COURSE = st.selectbox("Course Selection:", options=list(option4.keys()), format_func=format_func)
# 
# #Define options and format functions for percentage selection
# option5 = {0: "0", 20:"20"}
# def format_func(PERCENTAGE):
#     return option5[PERCENTAGE]
# PERCENTAGE = st.slider("Please enter your marks for week 1 until 7 as 20%:",0,20)
# 
# # Define options and format functions for frequency of week 1 selection
# 
# option6 = {0: "0", 86:"86"}
# def format_func(FreqW1):
#     return option6[FreqW1]
# FreqW1 = st.slider("Please enter your marks for week 1 as 20%:",0,86)
# 
# # Define options and format functions for frequency from week 1 to week 7 selection
# option7 = {0: "0", 600:"600"}
# def format_func(freqW1W7):
#     return option7[freqW1W7]
# freqW1W7 = st.slider("How many times did you access from  week 1 until 7:",0,600)
# # Define grade options and format function for grade selection
# option8 = {"A":"1","A-":"2","B":"3","B-":"4","B+":"5","C":"6","C-":"7","C+":"8","D+":"9","D":"10","F":"11"}
# def format_func(GRADE):
#     return option7[GRADE]
# GRADE = ''
# # Convert selected options to numerical values for model prediction
# if GENDER == "Female":
#         GENDER = 1
# elif GENDER == "Male":
#         GENDER = 2
# if AGE == "20":
#         AGE = 20
# elif AGE == "21":
#         AGE = 21
# elif AGE == "22":
#         AGE = 22
# elif AGE == "23":
#         AGE = 23
# elif AGE == "24":
#         AGE = 24
# elif AGE == "25":
#         AGE = 25
# elif AGE == "26":
#         AGE = 26
# elif AGE == "27":
#         AGE = 27
# elif AGE == "28":
#         AGE = 28
# elif AGE == "29":
#         AGE = 29
# elif AGE == "30":
#         AGE = 30
# elif AGE == "31":
#         AGE = 31
# elif AGE == "32":
#         AGE = 32
# elif AGE == "33":
#         AGE = 33
# elif AGE == "34":
#         AGE = 34
# elif AGE == "35":
#         AGE = 35
# elif AGE == "36":
#         AGE = 36
# elif AGE == "37":
#         AGE = 37
# elif AGE == "38":
#         AGE = 38
# elif AGE == "39":
#         AGE = 39
# elif AGE == "40":
#         AGE = 40
# if COUNTRY == "Local":
#         COUNTRY = 1
# elif COUNTRY == "Foreign":
#         COUNTRY = 2
# if TYPE_SPONSOR == "Biasiswa":
#         TYPE_SPONSOR = 11
# elif TYPE_SPONSOR == "Pinjaman":
#         TYPE_SPONSOR = 12
# elif TYPE_SPONSOR == "Tiada Penaja":
#         TYPE_SPONSOR = 13
# if COURSE == "AGEN KOMPUTERAN":
#         COURSE = 0
# elif COURSE == "ANALISIS DAN REKA BENTUK PERMAINAN KOMPUTER":
#         COURSE = 1
# elif COURSE == "ANALISIS DAN REKA BENTUK RANGKAIAN":
#         COURSE = 2
# elif COURSE == "ANALITIK BISNES":
#         COURSE = 3
# elif COURSE == "ANTARA RANGKAIAN":
#         COURSE = 4
# elif COURSE == "APLIKASI BERGERAK":
#         COURSE = 5
# elif COURSE == "FORENSIK KOMPUTER":
#         COURSE = 6
# elif COURSE == "KENYATAAN MAYA":
#         COURSE = 7
# elif COURSE == "KESELAMATAN PANGKALAN DATA":
#         COURSE = 8
# elif COURSE == "KESELAMATAN SISTEM KOMPUTER":
#         COURSE = 9
# elif COURSE == "KOMPUTERAN CERDAS":
#         COURSE = 10
# elif COURSE == "KRIPTOGRAFI":
#         COURSE = 11
# elif COURSE == "KUALITI PERISIAN":
#         COURSE = 12
# elif COURSE == "ORGANISASI KOMPUTER DAN BAHASA HIMPUNAN":
#         COURSE = 13
# elif COURSE == "PEMBANGUNAN 7":
#         COURSE = 14
# elif COURSE == "PEMBANGUNAN APLIKASI PANGKALAN DATA":
#         COURSE = 15
# elif COURSE == "PEMBANGUNAN APLIKASI WEB":
#         COURSE = 16
# elif COURSE == "PEMBANGUNAN PERISIAN SELAMAT":
#         COURSE = 17
# elif COURSE == "PEMBANGUNAN PERMAINAN KOMPUTER":
#         COURSE = 18
# elif COURSE == "PENDIGITAN AUDIO TAMPAK":
#         COURSE = 19
# elif COURSE == "PENGATURCARAAN C++":
#         COURSE = 20
# elif COURSE == "PENGATURCARAAN KOMPUTER I":
#         COURSE = 21
# elif COURSE == "PENGATURCARAAN KOMPUTER II":
#         COURSE = 22
# elif COURSE == "PENGATURCARAAN PYTHON":
#         COURSE = 23
# elif COURSE == "PENGATURCARAAN SELARI DAN TERAGIH":
#         COURSE = 24
# elif COURSE == "PENGATURCARAAN SHELL":
#         COURSE = 25
# elif COURSE == "PENGATURCARAAN SISTEM TERBENAM":
#         COURSE = 26
# elif COURSE == "PENGKOMPUTAN SELARI DAN TERAGIH":
#         COURSE = 27
# elif COURSE == "PENGUJIAN PERISIAN":
#         COURSE = 28
# elif COURSE == "PENGURUSAN RANGKAIAN":
#         COURSE = 29
# elif COURSE == "PENYELENGGARAAN DAN EVOLUSI PERISIAN":
#         COURSE = 30
# elif COURSE == "PERDAGANGAN ELEKTRONIK":
#         COURSE = 31
# elif COURSE == "PROJEK KEJURUTERAAN PERISIAN BERPASUKAN":
#         COURSE = 32
# elif COURSE == "SISTEM BERASASKAN PENGETAHUAN":
#         COURSE = 33
# elif COURSE == "SISTEM PENGOPERASIAN":
#         COURSE = 34
# elif COURSE == "STATISTIK BAGI SAINS KOMPUTER":
#         COURSE = 35
# elif COURSE == "STRUKTUR DATA DAN ALGORITMA":
#         COURSE = 36
# elif COURSE == "STRUKTUR DISKRET":
#         COURSE = 37
# elif COURSE == "PEMBANGUNAN APLIKASI BERGERAK":
#         COURSE = 38
# if PERCENTAGE == "0":
#         PERCENTAGE = 0
# elif PERCENTAGE == "20":
#         PERCENTAGE = 1
# if FreqW1 == "0":
#         FreqW1 = 0
# elif FreqW1 == "86":
#         freqW1 = 3
# if freqW1W7 == "0":
#         freqW1W7 = 0
# elif freqW1W7 == "600":
#         freqW1W7 = 1
# 
# # Predict grade based on user inputs
# if st.button('Predict'):
#     cost = predict(np.array([[GENDER, AGE, COUNTRY, TYPE_SPONSOR, COURSE, PERCENTAGE, FreqW1, freqW1W7]]))
#     predicted_grade = np.argmax(cost) + 1 # Add 1 to convert from 0-indexed to 1-indexed grade values
#     grade_mapping = {1: 'A', 2: 'A-', 3: 'B', 4: 'B-', 5: 'B+', 6: 'C', 7:'C-',8:'C+',9:'D+',10:'D',11:'F'}
#     predicted_letter_grade = grade_mapping.get(predicted_grade,'Unknown')
#     st.write('Based on your selection for GENDER={},AGE={},COUNTRY={},TYPE_SPONSOR={}, COURSE={}, PERCENTAGE={}, FreqW1={}, FreqW1W7={}, your predicted grade using Enhanced eLSTM model is:'.format(GENDER, AGE, COUNTRY, TYPE_SPONSOR, COURSE, PERCENTAGE, FreqW1, freqW1W7))
#     st.write(predicted_letter_grade)
# 
# 
#

!streamlit run Student_Grade_Prediction_App.py /dev/null
